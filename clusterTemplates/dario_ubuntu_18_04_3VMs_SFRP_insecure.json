{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "clusterLocation": {
        "type": "string",
        "defaultValue": "SouthCentralUS",
        "metadata": {
          "description": "Location of the Cluster"
        }
      },
      "clusterName": {
        "type": "string",
        "defaultValue": "dariolinclus5",
        "metadata": {
          "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
        }
      },
      "adminUserName": {
        "type": "string",
        "defaultValue": "dario",
        "metadata": {
          "description": "Remote desktop user Id"
        }
      },
      "adminPublicKey": {
        "type": "string",
        "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC65IosnKijcM4q+4DN6w8fHyjBqzwR48cG+/SrZ8YCOh2uDOFnQThhX3ahmSHqB58QgiQ6ECowimVKTJffv3Fnkt3C9LfTNlaTDSYJp3X3mtzpnVDLfdLBMH1AW5bH2AFdNNRoFxWxfG4OZJ5AlE/r3sn4//66VMAgcGeezVGI8WzNadeYdpKWfiYkUa/QuXvU+OBrcWeDzaYg+E7MJoqkhhpPvjHHn6o8Mo6oda4PGlyKpbK00GgueRrkzDW1yknczqGYSndVorQgSp8MdHovKf4MGYxuS0/o/8t9vgnuPPqs4OMKZO7teTFDlEncD9OKzvfpUawSl4+rhvVfvnjSpRseCIo1ql51bwVR79DUQB5SLbnbz30w1JgAkepTGAY0bKE7SGEmMl9psVTvZzW8Ww8/2jRkWgJKGOppyNLAKTsccW7dxTAiQKzu/+KdwDmC7wn/cNDNOPneYpWtw5IkLC4IdpM4/WcWvfHxXe9iBGwXSWMsHl3SFKN8x0JkBEI8qVtUnhnttW3yt2pxzyY3nEuhRyfxd/ti0WpnVGmZGm/9DuXf3sJ+1t4Zk7J9qAhv4O5q9DP+DY/gPkDQgGm08AeqET0YZLInbki/vqb1TV5JSMSaPG7p3LiWMG57tB2S4UHMCQSZh8Z7ibroveJoQtNr7ACqpqWV0L6B6Lzr/Q==",
        "metadata": {
          "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
        }
      },
      "vmImagePublisher": {
        "type": "string",
        "defaultValue": "Canonical",
        "metadata": {
          "description": "VM image Publisher"
        }
      },
      "vmImageOffer": {
        "type": "string",
        "defaultValue": "UbuntuServer",
        "metadata": {
          "description": "VM image offer"
        }
      },
      "vmImageSku": {
        "type": "string",
        "defaultValue": "18.04-LTS",
        "metadata": {
          "description": "VM image SKU"
        }
      },
      "vmImageVersion": {
        "type": "string",
        "defaultValue": "latest",
        "metadata": {
          "description": "VM image version"
        }
      },
      "containerIsolationLevel": {
          "type": "string",
          "defaultValue": "default",
          "metadata": {
            "description": "Cluster isolation level (default/hyperv)"
          }
        },
      "loadBalancedAppPort1": {
        "type": "int",
        "defaultValue": 80,
        "metadata": {
          "description": "Input endpoint1 for the application to use. Replace it with what your application uses"
        }
      },
      "loadBalancedAppPort2": {
        "type": "int",
        "defaultValue": 8080,
        "metadata": {
          "description": "Input endpoint2 for the application to use. Replace it with what your application uses"
        }
      },
      "loadBalancedAppPort3": {
        "type": "int",
        "defaultValue": 8081,
        "metadata": {
          "description": "Input endpoint3 for the application to use. Replace it with what your application uses"
        }
      },
      "loadBalancedAppPort4": {
        "type": "int",
        "defaultValue": 9999,
        "metadata": {
          "description": "Input endpoint4 for the application to use. Replace it with what your application uses"
        }
      },
      "storageAccountType": {
        "type": "string",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS"
        ],
        "defaultValue": "Standard_LRS",
        "metadata": {
          "description": "Replication option for the VM image storage account"
        }
      },
      "supportLogStorageAccountType": {
        "type": "string",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS"
        ],
        "defaultValue": "Standard_LRS",
        "metadata": {
          "description": "Replication option for the support log storage account"
        }
      },
      "applicationDiagnosticsStorageAccountType": {
        "type": "string",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS"
        ],
        "defaultValue": "Standard_LRS",
        "metadata": {
          "description": "Replication option for the application diagnostics storage account"
        }
      },
      "nt0InstanceCount": {
        "type": "int",
        "defaultValue": 3,
        "metadata": {
          "description": "Instance count for node type"
        }
      },
     "clusterVersion": {
       "type":"string",
       "defaultValue":"7.1.455.1"
      },    
     "buildUrl": {
       "type":"string",
       "defaultValue":"xxxx"
      },
     "fabricSettingsUrl": {
       "type":"string",
       "defaultValue":"xxxx"
      }    
    },
    "variables": {
      "computeLocation": "[parameters('clusterLocation')]",
      "dnsName": "[parameters('clusterName')]",
      "vmStorageAccountName": "[toLower(concat(uniqueString(resourceGroup().id), '1' ))]",
      "vmName": "vm",
      "publicIPAddressName": "PublicIP-VM",
      "publicIPAddressType": "Dynamic",
      "vmStorageAccountContainerName": "vhds",
      "virtualNetworkName": "VNet",
      "addressPrefix": "10.0.0.0/16",
      "nicName": "NIC",
      "lbName": "LoadBalancer",
      "lbIPName": "PublicIP-LB-FE",
      "availSetName": "AvailabilitySet",
      "maxPercentUpgradeDomainDeltaUnhealthyNodes": "100",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
      "overProvision": "false",
      "vmssApiVersion": "2018-06-01",
      "lbApiVersion": "2015-06-15",
      "vNetApiVersion": "2015-06-15",
      "storageApiVersion": "2016-01-01",
      "publicIPApiVersion": "2015-06-15",
      "nt0applicationStartPort": "20000",
      "nt0applicationEndPort": "30000",
      "nt0ephemeralStartPort": "49152",
      "nt0ephemeralEndPort": "65534",
      "nt0fabricTcpGatewayPort": "19000",
      "nt0fabricHttpGatewayPort": "19080",
      "subnet0Name": "Subnet-0",
      "subnet0Prefix": "10.0.0.0/24",
      "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
      "supportLogStorageAccountName": "[toLower( concat( uniqueString(resourceGroup().id),'2'))]",
      "applicationDiagnosticsStorageAccountName": "[toLower(concat(uniqueString(resourceGroup().id), '3' ))]",
      "wadlogs": "<WadCfg><DiagnosticMonitorConfiguration>",
      "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\AvailableMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentAvailableMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. percent available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\UsedMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedByCache\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. used by cache\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIdleTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU idle time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentUserTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentProcessorTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIOWaitTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU IO wait time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
      "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\BytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk total bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WriteBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\TransfersPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk transfers\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadsPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WritesPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk writes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageReadTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageWriteTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageTransferTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk transfer time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageDiskQueueLength\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Disk queue length\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
      "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
      "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
      "lbID0": "[resourceId('Microsoft.Network/loadBalancers',concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]",
      "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
      "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
      "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
      "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
      "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
      "vmNodeType0Name": "[toLower(concat('NT1', variables('vmName')))]",
      "vmNodeType0Size": "Standard_D2_v3",
      "vmStorageAccountName0": "[toLower(concat(uniqueString(resourceGroup().id), '1', '0' ))]",
      "uniqueStringArray0": [
        "[concat(variables('vmStorageAccountName0'), '0')]",
        "[concat(variables('vmStorageAccountName0'), '1')]",
        "[concat(variables('vmStorageAccountName0'), '2')]",
        "[concat(variables('vmStorageAccountName0'), '3')]",
        "[concat(variables('vmStorageAccountName0'), '4')]"
      ],
      "wadmetricsresourceid0": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/', variables('vmNodeType0Name'))]"
    },
    "resources": [
      {
        "apiVersion": "[variables('storageApiVersion')]",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('supportLogStorageAccountName')]",
        "location": "[variables('computeLocation')]",
        "dependsOn": [],
        "properties": {},
        "kind": "Storage",
        "sku": {
          "name": "[parameters('supportLogStorageAccountType')]"
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },
      {
        "apiVersion": "[variables('storageApiVersion')]",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('applicationDiagnosticsStorageAccountName')]",
        "location": "[variables('computeLocation')]",
        "dependsOn": [],
        "properties": {},
        "kind": "Storage",
        "sku": {
          "name": "[parameters('applicationDiagnosticsStorageAccountType')]"
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },
      {
        "apiVersion": "[variables('vNetApiVersion')]",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[variables('computeLocation')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkSecurityGroups/', concat('nsg', variables('subnet0Name')))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnet0Name')]",
              "properties": {
                "addressPrefix": "[variables('subnet0Prefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg', variables('subnet0Name')))]"
                }
              }
            }
          ]
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },
      {
        "apiVersion": "[variables('publicIPApiVersion')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(variables('lbIPName'),'-','0')]",
        "location": "[variables('computeLocation')]",
        "properties": {
          "dnsSettings": {
            "domainNameLabel": "[variables('dnsName')]"
          },
          "publicIPAllocationMethod": "Dynamic"
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },
      {
        "apiVersion": "[variables('lbApiVersion')]",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name'))]",
        "location": "[variables('computeLocation')]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/',concat(variables('lbIPName'),'-','0'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerIPConfig",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbIPName'),'-','0'))]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "LoadBalancerBEAddressPool",
              "properties": {}
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "backendAddressPool": {
                  "id": "[variables('lbPoolID0')]"
                },
                "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
                "enableFloatingIP": "false",
                "frontendIPConfiguration": {
                  "id": "[variables('lbIPConfig0')]"
                },
                "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
                "idleTimeoutInMinutes": "5",
                "probe": {
                  "id": "[variables('lbProbeID0')]"
                },
                "protocol": "tcp"
              }
            },
            {
              "name": "LBHttpRule",
              "properties": {
                "backendAddressPool": {
                  "id": "[variables('lbPoolID0')]"
                },
                "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
                "enableFloatingIP": "false",
                "frontendIPConfiguration": {
                  "id": "[variables('lbIPConfig0')]"
                },
                "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
                "idleTimeoutInMinutes": "5",
                "probe": {
                  "id": "[variables('lbHttpProbeID0')]"
                },
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortLBRule1",
              "properties": {
                "backendAddressPool": {
                  "id": "[variables('lbPoolID0')]"
                },
                "backendPort": "[parameters('loadBalancedAppPort1')]",
                "enableFloatingIP": "false",
                "frontendIPConfiguration": {
                  "id": "[variables('lbIPConfig0')]"
                },
                "frontendPort": "[parameters('loadBalancedAppPort1')]",
                "idleTimeoutInMinutes": "5",
                "probe": {
                  "id": "[concat(variables('lbID0'),'/probes/AppPortProbe1')]"
                },
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortLBRule2",
              "properties": {
                "backendAddressPool": {
                  "id": "[variables('lbPoolID0')]"
                },
                "backendPort": "[parameters('loadBalancedAppPort2')]",
                "enableFloatingIP": "false",
                "frontendIPConfiguration": {
                  "id": "[variables('lbIPConfig0')]"
                },
                "frontendPort": "[parameters('loadBalancedAppPort2')]",
                "idleTimeoutInMinutes": "5",
                "probe": {
                  "id": "[concat(variables('lbID0'),'/probes/AppPortProbe2')]"
                },
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortLBRule3",
              "properties": {
                "backendAddressPool": {
                  "id": "[variables('lbPoolID0')]"
                },
                "backendPort": "[parameters('loadBalancedAppPort3')]",
                "enableFloatingIP": "false",
                "frontendIPConfiguration": {
                  "id": "[variables('lbIPConfig0')]"
                },
                "frontendPort": "[parameters('loadBalancedAppPort3')]",
                "idleTimeoutInMinutes": "5",
                "probe": {
                  "id": "[concat(variables('lbID0'),'/probes/AppPortProbe3')]"
                },
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortLBRule4",
              "properties": {
                "backendAddressPool": {
                  "id": "[variables('lbPoolID0')]"
                },
                "backendPort": "[parameters('loadBalancedAppPort4')]",
                "enableFloatingIP": "false",
                "frontendIPConfiguration": {
                  "id": "[variables('lbIPConfig0')]"
                },
                "frontendPort": "[parameters('loadBalancedAppPort4')]",
                "idleTimeoutInMinutes": "5",
                "probe": {
                  "id": "[concat(variables('lbID0'),'/probes/AppPortProbe4')]"
                },
                "protocol": "tcp"
              }
            }
          ],
          "probes": [
            {
              "name": "FabricGatewayProbe",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "port": "[variables('nt0fabricTcpGatewayPort')]",
                "protocol": "tcp"
              }
            },
            {
              "name": "FabricHttpGatewayProbe",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "port": "[variables('nt0fabricHttpGatewayPort')]",
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortProbe1",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "port": "[parameters('loadBalancedAppPort1')]",
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortProbe2",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "port": "[parameters('loadBalancedAppPort2')]",
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortProbe3",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "port": "[parameters('loadBalancedAppPort3')]",
                "protocol": "tcp"
              }
            },
            {
              "name": "AppPortProbe4",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "port": "[parameters('loadBalancedAppPort4')]",
                "protocol": "tcp"
              }
            }
          ],
          "inboundNatPools": [
            {
              "name": "LoadBalancerBEAddressNatPool",
              "properties": {
                "backendPort": "22",
                "frontendIPConfiguration": {
                  "id": "[variables('lbIPConfig0')]"
                },
                "frontendPortRangeEnd": "4500",
                "frontendPortRangeStart": "3389",
                "protocol": "tcp"
              }
            }
          ]
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },

      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[concat('nsg', variables('subnet0Name'))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "allowSvcFabSMB",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "445",
                "direction": "Inbound",
                "priority": 3950,
                "protocol": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourcePortRange": "*"
              },
              "comments": "allow SMB traffic within the net, used by fabric to move packages around"
            },
            {
              "name": "allowSvcFabCluser",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "1025-1027",
                "direction": "Inbound",
                "priority": 3920,
                "protocol": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourcePortRange": "*"
              },
              "comments": "allow ports within vnet that are used by the fabric to talk between nodes"
            },
            {
              "name": "allowSvcFabEphemeral",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "[concat(variables('nt0ephemeralStartPort'), '-', variables('nt0ephemeralEndPort'))]",
                "direction": "Inbound",
                "priority": 3930,
                "protocol": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourcePortRange": "*"
              },
              "comments": "allow fabric ephemeral ports within the vnet"
            },
            {
              "name": "allowSvcFabPortal",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "[variables('nt0fabricHttpGatewayPort')]",
                "direction": "Inbound",
                "priority": 3900,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow port used to access the fabric cluster web portal"
            },
            {
              "name": "allowSvcFabClient",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "[variables('nt0fabricTcpGatewayPort')]",
                "direction": "Inbound",
                "priority": 3910,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow port used by the fabric client (includes powershell)"
            },
            {
              "name": "allowSvcFabApplication",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "[concat(variables('nt0applicationStartPort'), '-', variables('nt0applicationEndPort'))]",
                "direction": "Inbound",
                "priority": 3940,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow fabric application ports within the vnet"
            },
            {
              "name": "allowVNetCND",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "10010-10020",
                "direction": "Inbound",
                "priority": 3961,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow CNS within the net"
            },
           
            {
              "name": "allowVNetRDP",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3389-4500",
                "direction": "Inbound",
                "priority": 3960,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow RDP within the net"
            },
            {
              "name": "allowAppPort1",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "[parameters('loadBalancedAppPort1')]",
                "direction": "Inbound",
                "priority": 2001,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow public application port 1"
            },
            {
              "name": "allowAppPort2",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "8000-9000",
                "direction": "Inbound",
                "priority": 2002,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow public application port 2"
            },
            {
              "name": "allowCNS",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "10090",
                "direction": "Inbound",
                "priority": 2003,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow CNS"
            },
            {
              "name": "allow19400",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "19400",
                "direction": "Inbound",
                "priority": 2004,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow 19400"
            },
            {
              "name": "allow9001",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "9001",
                "direction": "Inbound",
                "priority": 2005,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow 9001"
            },
            {
              "name": "allow9999",
              "properties": {
                "access": "Allow",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "9999",
                "direction": "Inbound",
                "priority": 2006,
                "protocol": "*",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*"
              },
              "comments": "allow 9999"
            }
          ]
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },

      {
        "apiVersion": "[variables('storageApiVersion')]",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('uniqueStringArray0')[copyIndex()]]",
        "location": "[variables('computeLocation')]",
        "dependsOn": [],
        "properties": {},
        "copy": {
          "name": "storageLoop",
          "count": 5
        },
        "kind": "Storage",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },
      {
        "apiVersion": "[variables('vmssApiVersion')]",
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[variables('vmNodeType0Name')]",
        "location": "[variables('computeLocation')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0])]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1])]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2])]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3])]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4])]",
          "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
          "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
        ],
        "properties": {
          "overprovision": "[variables('overProvision')]",
          "upgradePolicy": {
            "mode": "Automatic"
          },
          "virtualMachineProfile": {
            "extensionProfile": {
              "extensions": [
                {
                  "name": "[concat('ServiceFabricNodeVmExt','_vmNodeType0Name')]",
                  "properties": {
                    "type": "ServiceFabricLinuxNodeTestDariopb",
                    "autoUpgradeMinorVersion": false,
                    "protectedSettings": {
                      "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                      "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                    },
                    "publisher": "Microsoft.Azure.ServiceFabric.Test",
                    "settings": {
                      "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                      "nodeTypeRef": "[variables('vmNodeType0Name')]",
                      "durabilityLevel": "Bronze",
                      "testExtension": true
                    },
                    "typeHandlerVersion": "1.1"
                  }
                },
                {
                  "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                  "properties": {
                    "type": "LinuxDiagnostic",
                    "autoUpgradeMinorVersion": true,
                    "protectedSettings": {
                      "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                      "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                      "storageAccountEndPoint": "https://core.windows.net/"
                    },
                    "publisher": "Microsoft.OSTCExtensions",
                    "settings": {
                      "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid0'),variables('wadcfgxend')))]",
                      "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                    },
                    "typeHandlerVersion": "2.3"
                  }
                }
              ]
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[concat(variables('nicName'), '-0')]",
                  "properties": {
                    "ipConfigurations": [
                      {
                        "name": "[concat(variables('nicName'),'-',0)]",
                        "properties": {
                          "primary": "true",
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[variables('lbPoolID0')]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[variables('lbNatPoolID0')]"
                            }
                          ],
                          "subnet": {
                            "id": "[variables('subnet0Ref')]"
                          }
                        }
                      }
                    ],
                    "primary": true
                  }
                }
              ]
            },
            "osProfile": {
              "adminUsername": "[parameters('adminUsername')]",
              "computernamePrefix": "[variables('vmNodeType0Name')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('adminPublicKey')]"
                  }
                ]
              }
            }
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "[parameters('vmImagePublisher')]",
                "offer": "[parameters('vmImageOffer')]",
                "sku": "[parameters('vmImageSku')]",
                "version": "[parameters('vmImageVersion')]"
              },
              "osDisk": {
                "vhdContainers": [
                  "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0]), variables('storageApiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'))]",
                  "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1]), variables('storageApiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'))]",
                  "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2]), variables('storageApiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'))]",
                  "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3]), variables('storageApiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'))]",
                  "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4]), variables('storageApiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'))]"
                ],
                "name": "vmssosdisk",
                "caching": "ReadOnly",
                "createOption": "FromImage"
              }
            }
          }
        },
        "sku": {
          "name": "[variables('vmNodeType0Size')]",
          "capacity": "[parameters('nt0InstanceCount')]",
          "tier": "Standard"
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      },
      {
        "apiVersion": "2017-07-01-privatepreview",
        "type": "Microsoft.ServiceFabric/clusters",
        "name": "[parameters('clusterName')]",
        "location": "[parameters('clusterLocation')]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
        ],
        "properties": {
          "clientCertificateCommonNames": [],
          "clientCertificateThumbprints": [],
          "clusterState": "Default",
          "diagnosticsStorageAccountConfig": {
            "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.blob]",
            "protectedAccountKeyName": "StorageAccountKey1",
            "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.queue]",
            "storageAccountName": "[variables('supportLogStorageAccountName')]",
            "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.table]"
          },
          "fabricSettings": [
              {
                  "name": "DnsService",
                  "parameters": [
                     {
                          "name": "IsEnabled",
                          "value": "true"
                     }
                  ]
              },
              {
                  "name": "ClusterManager/ContainerGroup",
                  "parameters": [
                    {
                      "name": "CG_IsolationLevel",
                      "value": "[parameters('containerIsolationLevel')]"
                    }
                  ]
              },
              {
                  "name": "Hosting",
                  "parameters": [
                    { 
                          "name": "IPProviderEnabled",
                          "value": "true"
                    },
                    { 
                          "name": "UseKataContainerRuntime",
                          "value": "false"
                    }
                  ]
              },
              {
                  "name":  "Trace/Etw", 
                  "parameters": [
                   {
                          "name": "Level",
                          "value": "5"
                   }
                  ]
              },
              {
                  "name":  "Diagnostics", 
                  "parameters": [
                  {
                          "name": "EnableCircularTraceSession",
                          "value": "false"
                  }  
                  ]
              },
              {
                  "name":  "Setup", 
                  "parameters": [
                   {
                          "name": "ContainerNetworkSetup",
                          "value": "true"
                   }
                  ]
              }
          ],
          "upgradeDescription": {
                      "upgradeReplicaSetCheckTimeout": "10675199.02:48:05.4775807",
                      "healthCheckWaitDuration": "00:02:00",
                      "healthCheckStableDuration": "00:03:00",
                      "healthCheckRetryTimeout": "00:45:00",
                      "upgradeTimeout": "12:00:00",
                      "upgradeDomainTimeout": "02:00:00",
                      "healthPolicy": {
                          "maxPercentUnhealthyNodes": 100,
                          "maxPercentUnhealthyApplications": 100
                      },
                      "deltaHealthPolicy": {
                          "maxPercentDeltaUnhealthyNodes": 0,
                          "maxPercentUpgradeDomainDeltaUnhealthyNodes": 0,
                          "maxPercentDeltaUnhealthyApplications": 0
                      }
                  },
          "managementEndpoint": "[concat('http://',reference(concat(variables('lbIPName'),'-','0')).dnsSettings.fqdn,':',variables('nt0fabricHttpGatewayPort'))]",
          "nodeTypes": [
            {
              "name": "[variables('vmNodeType0Name')]",
              "applicationPorts": {
                "endPort": "[variables('nt0applicationEndPort')]",
                "startPort": "[variables('nt0applicationStartPort')]"
              },
              "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
              "durabilityLevel": "Bronze",
              "ephemeralPorts": {
                "endPort": "[variables('nt0ephemeralEndPort')]",
                "startPort": "[variables('nt0ephemeralStartPort')]"
              },
              "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
              "isPrimary": true,
              "vmInstanceCount": "[parameters('nt0InstanceCount')]"
            }
          ],
          "provisioningState": "Default",        
          "upgradeMode": "Manual",
          "vmImage": "Ubuntu18_04"
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "[parameters('clusterName')]"
        }
      }
    ],
    "outputs": {
      "clusterProperties": {
        "value": "[reference(parameters('clusterName'))]",
        "type": "object"
      }
    }
  }